{"version":3,"file":"static/js/186.d4be3423.chunk.js","mappings":"+PAIe,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,uGACOC,EAAAA,EAAAA,IAAaP,GADpB,cACVQ,EADU,yBAIKA,EAASC,OAJd,OAIRC,EAJQ,OAKdN,EAAWM,EAAKC,SALF,kDAOdC,QAAQC,IAAI,KAAMC,SAPJ,0DAAH,qDAWfR,GACD,GAAE,CAACN,KAGF,+BACE,wBACGG,EAAQY,OAAS,EACdZ,EAAQa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,yBACE,4BACE,0BAAI,WAASD,MACb,uBAAIC,QAHCF,EADC,IAQZ,4CAIX,C,sJCvCD,IAAMG,EAAU,mCACVC,EAAW,gCAEJC,EAAgB,WAC3B,OAAOC,MAAM,GAAD,OAAIF,EAAJ,uCAA2CD,GACxD,EAEYI,EAAc,SAAAC,GACzB,OAAOF,MAAM,GAAD,OAAIF,EAAJ,gCAAoCD,EAApC,kBAAqDK,GAClE,EAEYC,EAAoB,SAAA1B,GAC/B,OAAOuB,MAAM,GAAD,OAAIF,EAAJ,iBAAqBrB,EAArB,oBAAwCoB,GACrD,EAEYO,EAAY,SAAA3B,GACvB,OAAOuB,MAAM,GAAD,OAAIF,EAAJ,iBAAqBrB,EAArB,4BAAgDoB,GAC7D,EAEYb,EAAe,SAAAP,GAC1B,OAAOuB,MAAM,GAAD,OAAIF,EAAJ,iBAAqBrB,EAArB,4BAAgDoB,GAC7D,C,sBCrBD,SAASQ,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C","sources":["components/Reviews/Reviews.jsx","services/fetchData.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'services/fetchData';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetchReviews(movieId);\n\n      try {\n        const data = await response.json();\n        setReviews(data.results);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <>\n      <ul>\n        {reviews.length > 0\n          ? reviews.map(({ id, author, content }) => (\n              <li key={id}>\n                <div>\n                  <h3>Author: {author}</h3>\n                  <p>{content}</p>\n                </div>\n              </li>\n            ))\n          : \"We couldn't find reviews for this film\"}\n      </ul>\n    </>\n  );\n}\n","const API_KEY = '453b881a671dd013b145c543ca73b9df';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrending = () => {\n  return fetch(`${BASE_URL}trending/movie/week?api_key=${API_KEY}`);\n};\n\nexport const fetchMovies = query => {\n  return fetch(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`);\n};\n\nexport const fetchMovieDetails = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`);\n};\n\nexport const fetchCast = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`);\n};\n\nexport const fetchReviews = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`);\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","fetchData","fetchReviews","response","json","data","results","console","log","message","length","map","id","author","content","API_KEY","BASE_URL","fetchTrending","fetch","fetchMovies","query","fetchMovieDetails","fetchCast","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}