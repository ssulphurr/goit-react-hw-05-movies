{"version":3,"file":"static/js/828.4f05cbf1.chunk.js","mappings":"2LAEe,SAASA,EAAT,GAA2C,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,SAC3C,OACE,wBACGD,EAAOE,KAAI,SAAAC,GAEV,OADAC,QAAQC,IAAIJ,IAEV,yBACE,SAAC,KAAD,CACEK,GACEL,EAASM,SAASC,SAAS,UAA3B,UACOL,EAAMM,IADb,iBAEcN,EAAMM,IAEtBC,MAAO,CAAEC,KAAMV,GANjB,SAQGE,EAAMS,SATFT,EAAMM,GAalB,KAGN,C,8ICtBc,SAASI,EAAT,GAAmC,IAAbC,EAAY,EAAZA,SACnC,OACE,kBAAMA,SAAUA,EAAhB,WACE,kBAAOC,KAAK,OAAOC,KAAK,QAAQC,YAAY,oBAC5C,mBAAQF,KAAK,SAAb,SAAsB,aAG3B,C,aCJc,SAASG,IACtB,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAE/B,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOxB,EAAP,KAAeyB,EAAf,KAEMxB,GAAWyB,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,GAAKL,EAAL,CAGA,IAAMM,EAAS,mCAAG,sGACOC,MAAM,4FAAD,OACkEP,IAF9E,cACVQ,EADU,yBAKKA,EAASC,OALd,OAKRC,EALQ,OAMdP,EAAUO,EAAKC,SAND,kDAQd7B,QAAQC,IAAR,MARc,0DAAH,qDAYfuB,GAbC,CAcF,GAAE,CAACN,IAUJ,OACE,iCACE,SAACT,EAAD,CAAYC,SAVK,SAAAoB,GACnBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAOC,SAAShB,MAC1BiB,EAAoC,KAAvBH,EAAMI,MAAMC,OAAgB,CAAEnB,MAAOc,EAAMI,OAAU,CAAC,EACzEnB,EAAgBkB,GAChBH,EAAMI,MAAQ,EACf,IAMIlB,GAA2B,IAAlBtB,EAAO0C,SACf,2BAAK,2BAAyBpB,EAAM,OAErCA,IAAS,SAACvB,EAAA,EAAD,CAAYC,OAAQA,EAAQC,SAAUA,MAGrD,C,sBClDD,SAAS0C,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBV,EAAQW,EAAKX,KAInB,CAHE,MAAOY,GAEP,YADAN,EAAOM,EAET,CAEID,EAAKE,KACPR,EAAQL,GAERc,QAAQT,QAAQL,GAAOe,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMP,GACbG,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQR,EAClE,CAEA,SAASQ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["components/MoviesList.jsx","components/SearchForm.jsx","pages/Movies.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nexport default function MoviesList({ movies, location }) {\n  return (\n    <ul>\n      {movies.map(movie => {\n        console.log(location);\n        return (\n          <li key={movie.id}>\n            <Link\n              to={\n                location.pathname.includes('movies')\n                  ? `${movie.id}`\n                  : `movies/${movie.id}`\n              }\n              state={{ from: location }}\n            >\n              {movie.title}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","import PropTypes from 'prop-types';\n\nexport default function SearchForm({ onSubmit }) {\n  return (\n    <form onSubmit={onSubmit}>\n      <input type=\"text\" name=\"query\" placeholder=\"Movie title...\" />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n}\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport SearchForm from 'components/SearchForm';\nimport MoviesList from '../components/MoviesList';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const [movies, setMovies] = useState([]);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    const fetchData = async () => {\n      const response = await fetch(\n        `https://api.themoviedb.org/3/search/movie?api_key=453b881a671dd013b145c543ca73b9df&query=${query}`\n      );\n      try {\n        const data = await response.json();\n        setMovies(data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchData();\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const input = e.target.elements.query;\n    const nextParams = input.value.trim() !== '' ? { query: input.value } : {};\n    setSearchParams(nextParams);\n    input.value = '';\n  };\n\n  return (\n    <>\n      <SearchForm onSubmit={handleSubmit} />\n\n      {query && movies.length === 0 && (\n        <div>We have 0 films titled \"{query}\"</div>\n      )}\n      {query && <MoviesList movies={movies} location={location} />}\n    </>\n  );\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["MoviesList","movies","location","map","movie","console","log","to","pathname","includes","id","state","from","title","SearchForm","onSubmit","type","name","placeholder","Movies","useSearchParams","searchParams","setSearchParams","query","get","useState","setMovies","useLocation","useEffect","fetchData","fetch","response","json","data","results","e","preventDefault","input","target","elements","nextParams","value","trim","length","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}