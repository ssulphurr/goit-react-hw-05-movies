{"version":3,"file":"static/js/115.ee0cb2a7.chunk.js","mappings":"8PAGe,SAASA,IACtB,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAE/B,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACR,GAAKP,EAAL,CAGA,IAAMQ,EAAS,mCAAG,sGACOC,MAAM,4FAAD,OACkET,IAF9E,cACVU,EADU,yBAKKA,EAASC,OALd,OAKRC,EALQ,OAMdR,EAAUQ,EAAKC,SAND,kDAQdC,QAAQC,IAAR,MARc,0DAAH,qDAYfP,GAbC,CAcF,GAAE,CAACR,IAUJ,OACE,iCACE,kBAAMgB,SAVW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAOC,SAASrB,MAC1BsB,EAAoC,KAAvBH,EAAMI,MAAMC,OAAgB,CAAExB,MAAOmB,EAAMI,OAAU,CAAC,EACzExB,EAAgBuB,GAChBH,EAAMI,MAAQ,EACf,EAIG,WACE,kBAAOE,KAAK,OAAOC,KAAK,QAAQC,YAAY,oBAC5C,mBAAQF,KAAK,SAAb,SAAsB,cAGvBzB,GAA2B,IAAlBG,EAAOyB,SACf,2BAAK,2BAAyB5B,EAAM,OAErCA,IACC,wBACGG,EAAO0B,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAM7B,GAAxC,SACGyB,EAAMK,SAFFL,EAAME,GADA,QAW1B,C","sources":["components/Movies/Movies.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const [movies, setMovies] = useState([]);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    const fetchData = async () => {\n      const response = await fetch(\n        `https://api.themoviedb.org/3/search/movie?api_key=453b881a671dd013b145c543ca73b9df&query=${query}`\n      );\n      try {\n        const data = await response.json();\n        setMovies(data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchData();\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const input = e.target.elements.query;\n    const nextParams = input.value.trim() !== '' ? { query: input.value } : {};\n    setSearchParams(nextParams);\n    input.value = '';\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"query\" placeholder=\"Movie title...\" />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {query && movies.length === 0 && (\n        <div>We have 0 films titled \"{query}\"</div>\n      )}\n      {query && (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n"],"names":["Movies","useSearchParams","searchParams","setSearchParams","query","get","useState","movies","setMovies","location","useLocation","useEffect","fetchData","fetch","response","json","data","results","console","log","onSubmit","e","preventDefault","input","target","elements","nextParams","value","trim","type","name","placeholder","length","map","movie","to","id","state","from","title"],"sourceRoot":""}