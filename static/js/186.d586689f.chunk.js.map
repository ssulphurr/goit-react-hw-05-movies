{"version":3,"file":"static/js/186.d586689f.chunk.js","mappings":"sPAGe,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,sGACOC,MAAM,sCAAD,OACYP,EADZ,sDADZ,cACVQ,EADU,yBAMKA,EAASC,OANd,OAMRC,EANQ,OAOdN,EAAWM,EAAKC,SAPF,kDASdC,QAAQC,IAAI,KAAMC,SATJ,0DAAH,qDAafR,GACD,GAAE,CAACN,KAGF,+BACE,wBACGG,EAAQY,OAAS,EACdZ,EAAQa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACV,yBACE,4BACE,0BAAI,WAASD,MACb,uBAAIC,QAHCF,EADC,IAQZ,4CAIX,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(\n        `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=453b881a671dd013b145c543ca73b9df`\n      );\n\n      try {\n        const data = await response.json();\n        setReviews(data.results);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <>\n      <ul>\n        {reviews.length > 0\n          ? reviews.map(({ id, author, content }) => (\n              <li key={id}>\n                <div>\n                  <h3>Author: {author}</h3>\n                  <p>{content}</p>\n                </div>\n              </li>\n            ))\n          : \"We couldn't find reviews for this film\"}\n      </ul>\n    </>\n  );\n}\n"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","fetchData","fetch","response","json","data","results","console","log","message","length","map","id","author","content"],"sourceRoot":""}